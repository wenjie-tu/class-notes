d.info <- data.frame(matrix(c(20, 0.6, 5, 0.25), nrow=2, byrow=TRUE))
colnames(d.info) <- c("Sample Size", "Response Rate")
rownames(d.info) <- c("Secukinumab", "Placebo")
knitr::kable(d.info, align=c("cc"), caption="Bayesian study design 4:1")
## Set the seed for reproducible results
set.seed(44566)
n.s <- 20       # sample size in Secukinumab
n.p <- 5        # sample size in Placebo
prob.s <- 0.6   # true response rate in Secukinumab
prob.p <- 0.25  # true response rate in Placebo
M <- 10000      # MC sample size
x.s <- rbinom(M, size=n.s, prob=prob.s)
x.p <- rbinom(M, size=n.p, prob=prob.p)
RR.s <- x.s / n.s      # MC sample response rate in Secukinumab
RR.p <- x.p / n.p      # MC sample response rate in Placebo
RRD <- RR.s - RR.p     # MC sample response rate difference
library(ggplot2)
## Histogram
ggplot(data.frame(RRD=RRD), aes(x=RRD, y=..density..)) +
geom_histogram(bins=35, color=4, fill=4, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
labs(title="Histogram of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_minimal()
## Density
ggplot(data.frame(RRD=RRD), aes(x=RRD, y=..density..)) +
geom_density(color=4, fill=4, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_minimal()
library(ggplot2)
## Histogram
ggplot(data.frame(RRD=RRD), aes(x=RRD, y=..density..)) +
geom_histogram(bins=35, color=4, fill=4, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
labs(title="Histogram of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_classic()
## Density
ggplot(data.frame(RRD=RRD), aes(x=RRD, y=..density..)) +
geom_density(color=4, fill=4, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_classic()
## Proof of concept (i.e. P[RRD > 0])
poc <- mean(RRD > 0); poc
## MC standard error
poc.se <- sqrt(var(RRD > 0)/M); poc.se
## 99% confidence interval
poc.CI99 <- c(poc - 3 * poc.se, poc + 3 * poc.se); poc.CI99
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
geom_line(color=4) + geom_vline(xintercept=0, color=2) + ylim(0, 1.8) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density") +
geom_text(aes(x=0.4, y=0.5, label="90% probability density"),
color=4, check_overlap=TRUE) + theme_minimal()
## Define a function for design analysis
## Params: M, size1, size2, prob1, prob2
design.analysis <- function(M,          # Monte Carlo sample size
size1,      # number of patients on secukinumab
size2,      # number of patients on placebo
prob1=0.6,  # response rate on secukinumab
prob2=0.25  # response rate on placebo
) {
## MC number of responders on secukinumab
mc1 <- rbinom(M, size=size1, prob=prob1)
## MC number of responders on placebo
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1  # MC response rate in Secukinumab
RR2 <- mc2/size2  # MC response rate in Placebo
RRD <- RR1 - RR2  # MC response rate difference
## Proof of concept
poc <- mean(RRD > 0)
## MC standard error of POC
poc.se <- sqrt(var(RRD > 0)/M)
return(list(poc=poc, poc.se=poc.se))
}
## Set the seed for reproducible results
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=5))
colnames(df) <- c("Design", "POC", "MCse", "lower99", "upper99")
for (i in 1:6) {
results  <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- sprintf("%.0f:%.0f", i*4, i)
df[i, 2] <- results$poc
df[i, 3] <- results$poc.se
df[i, 4] <- results$poc - 3*results$poc.se
df[i, 5] <- results$poc + 3*results$poc.se
}
knitr::kable(df, align=c("lccccc"), caption="POCs for different designs")
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), alpha=0.3) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99)) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), position=position_dodge()) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), fill=4) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, position=position_dodge(.9)) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99)) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
geom_line(color=4, linetype="longdash") +
geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99)) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99)) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
# geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
?geom_errorbar
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
# geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4, linetype=2) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
# geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4, linetype=2, width=.5) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
# geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4, width=.5) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
lvls <- c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6")
ggplot(df, aes(x=1:6, y=POC)) +
geom_point(aes(x=factor(Design, levels=lvls)), color=4, size=2) +
# geom_line(color=4, linetype="longdash") +
# geom_ribbon(aes(ymin=lower99, ymax=upper99), fill=4, alpha=0.3) +
geom_errorbar(aes(ymin=lower99, ymax=upper99), color=4, width=.2) +
geom_hline(yintercept=0.9, color=2) +
labs(title="Study Design Analysis", x="Secukinumab : Placebo",
y="Proof of concept (POC)") + theme_minimal()
?power.prop.test
q()
q()
