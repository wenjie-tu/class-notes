geom_line(color=4) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
quantile(RRD, probs=0.1)
1-poc.CI99
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=4) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=2, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=4) +
#geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=2, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=2) +
#geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=3, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=4) +
#geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=2, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=4) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=2, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_line(color=4) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
# geom_area(aes(x=ifelse(x>poc.CI99[1] & x<poc.CI99[2], x, 0), y=y), fill="red", alpha=0.2) +
# geom_area(aes(x=ifelse(x>0, x, 0), y=y), fill=2, alpha=0.2) +
geom_vline(xintercept=0, color=2) +
ylim(0, 2)
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
geom_line(color=4) + geom_vline(xintercept=0, color=2) + ylim(0, 2) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density")
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
geom_line(color=4) + geom_vline(xintercept=0, color=2) + ylim(0, 2) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_minimal()
d.density <- with(density(RRD), data.frame(x, y))
ggplot(data=d.density, mapping=aes(x=x, y=y)) +
geom_area(aes(x=ifelse(x>quantile(RRD, probs=0.1), x, 0), y=y), fill=4, alpha=0.2) +
geom_line(color=4) + geom_vline(xintercept=0, color=2) + ylim(0, 1.8) +
labs(title="Density of RRD", x="Response Rate Difference (RRD)", y="Density") +
theme_minimal()
for i in 1:6 {
pocAnalysis <- function(M, size1, size2, prob1, prob2) {
mc1 <- rbinom(M, size=size1, prob=prob1)
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1    # response rate in Secukinumab
RR2 <- mc2/size2    # response rate in Placebo
RRD <- RR1 - RR2    # response rate difference
poc <- mean(RRD > 0)
poc.se <- sqrt(var(RRD > 0)/M)
return(c(poc, poc.se))
}
pocAnalysis(M=10000, size1=20, size2=5, prob1=0.6, prob2=0.25)
set.seed(44566)
pocAnalysis(M=10000, size1=20, size2=5, prob1=0.6, prob2=0.25)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
set.seed(44566)
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
set.seed(44566)
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
set.seed(44566)
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
set.seed(44566)
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- pocAnalysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
pocAnalysis(M=10000, size1=20, size2=5, prob1=0.6, prob2=0.25)
set.seed(44566)
pocAnalysis(M=10000, size1=20, size2=5, prob1=0.6, prob2=0.25)
pocAnalysis(M=10000, size1=20, size2=5, prob1=0.6, prob2=0.25)
?dbinom
design.analysis <- function(M,          # Monte Carlo sample size
size1,      # number of patients on secukinumab
size2,      # number of patients on placebo
prob1=0.6,  # response rate on secukinumab
prob2=0.25  # response rate on placebo
) {
## MC number of responders on secukinumab
mc1 <- rbinom(M, size=size1, prob=prob1)
## MC number of responders on placebo
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1  # MC response rate in Secukinumab
RR2 <- mc2/size2  # MC response rate in Placebo
RRD <- RR1 - RR2  # MC response rate difference
## Proof of concept
poc <- mean(RRD > 0)
## MC standard error of POC
poc.se <- sqrt(var(RRD > 0)/M)
return(c(poc, poc.se))
}
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse (POC)")
for (i in 1:6) {
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("POC", "MCse")
for (i in 1:6) {
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- params[1]
df[i, 2] <- params[2]
}
knitr::kable(df)
plot(x=c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6"), y=poc.grid)
poc.grid <- df$POC
se.bands <- cbind(df$POC+3*df$MCse, df$POC-3*df$MCse)
plot(x=c("4:1", "8:2", "12:3", "16:4", "20:5", "24:6"), y=poc.grid)
plot(x=1:6, y=poc.grid)
plot(x=1:6, y=poc.grid)
matlines(x=1:6, se.bands)
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
plot(x=1:6, y=poc.grid)
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
plot(x=1:6, y=poc.grid, type="l")
plot(x=1:6, y=poc.grid, type="l")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
?plot
plot(x=1:6, y=poc.grid, type="b")
plot(x=1:6, y=poc.grid, type="b")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
design.analysis <- function(M,          # Monte Carlo sample size
size1,      # number of patients on secukinumab
size2,      # number of patients on placebo
prob1=0.6,  # response rate on secukinumab
prob2=0.25  # response rate on placebo
) {
## MC number of responders on secukinumab
mc1 <- rbinom(M, size=size1, prob=prob1)
## MC number of responders on placebo
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1  # MC response rate in Secukinumab
RR2 <- mc2/size2  # MC response rate in Placebo
RRD <- RR1 - RR2  # MC response rate difference
## Proof of concept
poc <- mean(RRD > 0)
## MC standard error of POC
poc.se <- sqrt(var(RRD > 0)/M)
return(list(poc, poc.se))
}
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
params$poc
return(list(c(poc, poc.se)))
design.analysis <- function(M,          # Monte Carlo sample size
size1,      # number of patients on secukinumab
size2,      # number of patients on placebo
prob1=0.6,  # response rate on secukinumab
prob2=0.25  # response rate on placebo
) {
## MC number of responders on secukinumab
mc1 <- rbinom(M, size=size1, prob=prob1)
## MC number of responders on placebo
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1  # MC response rate in Secukinumab
RR2 <- mc2/size2  # MC response rate in Placebo
RRD <- RR1 - RR2  # MC response rate difference
## Proof of concept
poc <- mean(RRD > 0)
## MC standard error of POC
poc.se <- sqrt(var(RRD > 0)/M)
return(list(c(poc, poc.se)))
}
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
params$se
params
design.analysis <- function(M,          # Monte Carlo sample size
size1,      # number of patients on secukinumab
size2,      # number of patients on placebo
prob1=0.6,  # response rate on secukinumab
prob2=0.25  # response rate on placebo
) {
## MC number of responders on secukinumab
mc1 <- rbinom(M, size=size1, prob=prob1)
## MC number of responders on placebo
mc2 <- rbinom(M, size=size2, prob=prob2)
RR1 <- mc1/size1  # MC response rate in Secukinumab
RR2 <- mc2/size2  # MC response rate in Placebo
RRD <- RR1 - RR2  # MC response rate difference
## Proof of concept
poc <- mean(RRD > 0)
## MC standard error of POC
poc.se <- sqrt(var(RRD > 0)/M)
return(list(poc=poc, poc.se=poc.se))
}
params <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
params$poc
?paste
?format
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=2))
colnames(df) <- c("Design", "POC", "MCse")
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=3))
colnames(df) <- c("Design", "POC", "MCse")
for (i in 1:6) {
results <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- sprintf("%:%", i*4, i)
df[i, 2] <- results$poc
df[i, 3] <- results$poc.se
}
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=3))
colnames(df) <- c("Design", "POC", "MCse")
for (i in 1:6) {
results <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
df[i, 1] <- sprintf("%.0f:%.0f", i*4, i)
df[i, 2] <- results$poc
df[i, 3] <- results$poc.se
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=4))
colnames(df) <- c("Design", "POC", "MCse", "99%CI")
for (i in 1:6) {
results <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
poc <- results$poc
poc.se <- results$poc.se
df[i, 1] <- sprintf("%.0f:%.0f", i*4, i)
df[i, 2] <- results$poc
df[i, 3] <- results$poc.se
df[i, 4] <- sprintf("(%.4f, %.4f)", poc-3*poc.se, poc+3*poc.se)
}
knitr::kable(df)
set.seed(44566)
df <- data.frame(matrix(nrow=6, ncol=4))
colnames(df) <- c("Design", "POC", "MCse", "99%CI")
for (i in 1:6) {
results  <- design.analysis(M=10000, size1=i*4, size2=i, prob1=0.6, prob2=0.25)
poc      <- results$poc
poc.se   <- results$poc.se
df[i, 1] <- sprintf("%.0f:%.0f", i*4, i)
df[i, 2] <- poc
df[i, 3] <- poc.se
df[i, 4] <- sprintf("(%.4f, %.4f)", poc-3*poc.se, poc+3*poc.se)
}
knitr::kable(df, align=c("lccc"))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
lines(h=0.9)
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
lines(h=0.9)
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
abline(h=0.9, col="red")
?plot
plot(x=1:6, y=poc.grid, type="c", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=2, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue")
matlines(x=1:6, se.bands, type="o", lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue")
matlines(x=1:6, se.bands, type="p", lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue")
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC")
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
legend("")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
#legend("")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.75, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
#legend("")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
#legend("")
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
legend("topleft", legend=c("POC", "3SE", "baseline"),
col=c("blue", "blue", "red"))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=3)
abline(h=0.9, col="red")
legend("topleft", legend=c("POC", "3SE", "baseline"),
col=c("blue", "blue", "red"), lty=1:3)
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red")
legend("topleft", legend=c("POC", "3SE", "baseline"),
col=c("blue", "blue", "red"), lty=(1, 2, 1))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red")
legend("topleft", legend=c("POC", "3SE", "baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), type=c("o", "l", "l"))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), bty="o")
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), box.lty="o")
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, 2, 3))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, NULL, NULL))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, 0, 0))
?pch
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, NULL, NULL))
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=1)
plot(x=1:6, y=poc.grid, type="b", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, NA, NA))
plot(x=1:6, y=poc.grid, type="o", lwd=2, col="blue",
xlab="# of patients on placebo", ylab="POC", ylim=c(0.7, 1))
matlines(x=1:6, se.bands, lwd=1, col="blue", lty=2)
abline(h=0.9, col="red", lwd=2)
legend("topleft", legend=c("POC", "3SE", "Baseline"),
col=c("blue", "blue", "red"), lty=c(1, 2, 1), lwd=c(2, 1, 2), pch=c(1, NA, NA))
q()
q()
